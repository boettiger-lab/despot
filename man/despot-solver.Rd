% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solver.R
\name{solver}
\alias{solver}
\alias{despot-solver}
\alias{DESPOT-solver}
\title{APPL wrappers}
\usage{
solver(model, output = tempfile(), runs = 2, stdout = tempfile(),
  stderr = tempfile(), timeout = NULL, simlen = NULL,
  max_policy_simlen = NULL, depth = NULL, discount = NULL)
}
\arguments{
\item{model}{file/path to the \code{pomdp} model file}

\item{output}{file where the simulation output will be written (default tempfile)}

\item{runs}{number of simulation runs (default 2)}

\item{stdout}{a filename where pomdp run data will be stored}

\item{stderr}{where output to 'stderr', see \code{\link{system2}}. Use \code{FALSE}
to suppress output.}

\item{timeout}{search time per move, in seconds (default 1)}

\item{simlen}{despot number of steps to simulate (default 90)}

\item{max_policy_simlen}{number of steps to simulate the default policy (default 90)}

\item{depth}{maximum depth to simulate (default 90)}

\item{discount}{discount factor for the POMDP model (default from the model file)}
}
\description{
Wrappers for the DESPOT executables. The \code{solver} function solves a model
file and returns the path to the output policy file.
}
\examples{
\donttest{
model <- system.file("models/example.pomdp", package = "despot")
policy <- tempfile()
solver(model, output = policy, timeout = 1)

# Other tools
evaluation <- pomdpeval(model, policy, stdout = FALSE)
graph <- polgraph(model, policy, stdout = FALSE)
simulations <- pomdpsim(model, policy, stdout = FALSE)
}
}
